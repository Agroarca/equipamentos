name: 'Checks, Builds, Tests'

on:
  pull_request:
    paths:
      - '**.php'
      - 'resources/**'

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm install

      - name: Run Eslint
        run: npm run eslint
  buildjs:
    needs: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm install

      - run: rm -r public/build/*

      - name: Compile assets for production
        run: npm run build

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Github Action - Build Assets
          file_pattern: public/build/
  phpcs:
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.2

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Run PHP Code Sniffer
      run: |
        ./vendor/bin/phpcs

  laravel-test:
    needs: [phpcs, buildjs]
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.2

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: CP .env
      run: |
        cp .env.ci .env

    - name: Generate Key
      run: |
          php artisan key:generate

    - name: Run Testsuite
      run: php artisan test
