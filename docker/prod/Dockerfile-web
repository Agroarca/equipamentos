# Build Front-End
FROM node:18-alpine as node-build

WORKDIR /app

COPY . ./

RUN npm install  && \
    npm run build && \
    rm -r node_modules

# Runner
FROM php:8.2

WORKDIR /app

COPY . ./
COPY --from=node-build /app/public/build public/build

RUN apt update && \
    apt install -y ca-certificates cron curl tar unzip libpng-dev libxml2-dev libzip-dev && \
    apt clean && \
    docker-php-ext-configure zip && \
    docker-php-ext-install bcmath gd pdo_mysql zip && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
    composer install --optimize-autoloader --no-dev && \
    chmod +x docker/prod/docker_entrypoint_web.sh

### New Relic PHP APM ###
ARG NEW_RELIC_AGENT_VERSION
ARG NEW_RELIC_LICENSE_KEY
ARG NEW_RELIC_APPNAME

RUN curl -L https://download.newrelic.com/php_agent/archive/${NEW_RELIC_AGENT_VERSION}/newrelic-php5-${NEW_RELIC_AGENT_VERSION}-linux.tar.gz | tar -C /tmp -zx && \
    export NR_INSTALL_USE_CP_NOT_LN=1 && \
    export NR_INSTALL_SILENT=1 && \
    /tmp/newrelic-php5-${NEW_RELIC_AGENT_VERSION}-linux/newrelic-install install && \
    rm -rf /tmp/newrelic-php5-* /tmp/nrinstall*

RUN sed -i -e "s/REPLACE_WITH_REAL_KEY/${NEW_RELIC_LICENSE_KEY}/" \
    -e "s/newrelic.appname[[:space:]]=[[:space:]].*/newrelic.appname=\"${NEW_RELIC_APPNAME}\"/" \
    -e '$anewrelic.daemon.address="newrelic-php-daemon:31339"' \
    $(php -r "echo(PHP_CONFIG_FILE_SCAN_DIR);")/newrelic.ini
### End New Relic PHP APM ###

EXPOSE 8000
