version: "3.3"

services:
    equipamentos:
        image: equipamentos
        container_name: equipamentos
        build:
            context: projeto
            dockerfile: docker/prod/Dockerfile-web
        volumes:
            - /var/www/equipamentos/storage:/app/storage
        ports:
            - 8000:8000
        expose:
            - 8000
        networks:
            - database
            - socketi
            - nginx
        restart: always
        entrypoint: 'docker/prod/docker_entrypoint_web.sh'
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
            interval: 30s
            timeout: 10s
            retries: 2
            start_period: 2m
    equipamentos_queue:
        image: equipamentos
        container_name: equipamentos_queue
        build:
            context: projeto
            dockerfile: docker/prod/Dockerfile-queue
        volumes:
            - /var/www/equipamentos/storage:/app/storage
        networks:
            - database
            - socketi
            - nginx
        restart: always
        entrypoint: 'docker/prod/docker_entrypoint_queue.sh'
    socketi:
        container_name: socketi
        image: quay.io/soketi/soketi:1.4-16-debian
        ports:
            - 6001:6001
            - 9601:9601
        expose:
            - 6001
            - 9601
        restart: always
        networks:
            - socketi
            - nginx
        environment:
            DEBUG: false
            SOKETI_METRICS_ENABLED: true
            SOKETI_DEBUG: 0
    autoheal:
        restart: always
        image: willfarrell/autoheal
        environment:
            - AUTOHEAL_CONTAINER_LABEL=all
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

networks:
    database:
        name: database
    socketi:
        name: socketi
    nginx:
        name: nginx
