{"version":3,"file":"Conversa-e511dcdb.js","sources":["../../../resources/js/Models/Equipamento/Conversa/Mensagem.ts","../../../resources/js/Pages/Site/Equipamento/Conversa/Componentes/ConversaLib.ts","../../../resources/js/Models/Equipamento/Conversa/Conversa.ts","../../../resources/js/Pages/Site/Equipamento/Conversa/Conversa.vue"],"sourcesContent":["/* eslint-disable camelcase */\nexport default class Mensagem {\n    id: number\n    mensagem: string\n    usuario_id: number\n    created_at: Date\n    loading: boolean\n\n    constructor(id, mensagem, usuario_id, created_at, loading = false) {\n        this.id = id\n        this.mensagem = mensagem\n        this.usuario_id = usuario_id\n        this.created_at = created_at\n        this.loading = loading\n    }\n\n    static converterArray(mensagens) {\n        return mensagens.map((m) => new Mensagem(m.id, m.mensagem, m.usuario_id, m.created_at))\n    }\n}\n","import { Ref, onMounted, ref } from 'vue'\nimport { filter, first, last } from 'lodash'\nimport axios from 'axios'\nimport { getPush } from '@/Componentes/Notificacao/Push'\nimport NovaMensagem from '@/Componentes/Eventos/NovaMensagem'\nimport MensagemExcluida from '@/Componentes/Eventos/MensagemExcluida'\nimport Listener from '@/Componentes/Eventos/Listener'\nimport Conversa from '@/Models/Equipamento/Conversa/Conversa'\nimport Mensagem from '@/Models/Equipamento/Conversa/Mensagem'\n\nexport default function conversaLib(conversa: Conversa, propsUsuarioId) {\n    let mensagens: Ref<Mensagem[]> = ref(conversa.mensagens)\n    let mensagensAnteriores: Ref<boolean> = ref(false)\n    let temNovasMensagens: Ref<boolean> = ref(false)\n    let temPermNotificacao: Ref<boolean> = ref(getPush().temPermissao())\n    let conversaId: number = conversa.id\n    let ultimaMsgVisualizadaId: Ref<number> = ref(conversa.visualizacao.ultima_mensagem_id)\n    let usuarioId: number = propsUsuarioId\n\n    let tempId: number = -1\n    let controleAtualizar = {\n        bloquearAtualizar: false,\n        atualizar: false,\n        bloquearAtualizarAnteriores: false,\n    }\n\n    onMounted(() => {\n        novaMensagemListener()\n        mensagemExcluidaListener()\n    })\n\n    function getUltimaMensagemVisualizada() {\n        return mensagens.value.findLast((m) => m.id <= ultimaMsgVisualizadaId.value)\n    }\n\n    function getProximaMensagem(id: number): Mensagem {\n        return mensagens.value.find((m) => m.id > id)\n    }\n\n    function visualizarMensagem(id: number) : void {\n        if (id < ultimaMsgVisualizadaId.value) {\n            return\n        }\n\n        ultimaMsgVisualizadaId.value = id\n        ajaxEnviarUltimaVisualizacao(id)\n    }\n\n    async function atualizarMensagens() : Promise<void> {\n        if (controleAtualizar.bloquearAtualizar) {\n            controleAtualizar.atualizar = true\n        }\n\n        controleAtualizar.bloquearAtualizar = true\n        controleAtualizar.atualizar = false\n\n        await ajaxNovasMensagens(mensagens.value.findLast((m) => m.id > 0)?.id ?? 0)\n\n        controleAtualizar.bloquearAtualizar = false\n        if (controleAtualizar.atualizar) {\n            atualizarMensagens()\n        }\n    }\n\n    function solicitarPermNotificacao(): void {\n        getPush().solicitarPermissao().then(() => { temPermNotificacao.value = getPush().temPermissao() })\n    }\n\n    function deveSolicitarPermissao(): void {\n        if (getPush().jaSolicitouPermissao()) {\n            return\n        }\n\n        if (getPush().temPermissao()) {\n            return\n        }\n\n        solicitarPermNotificacao()\n    }\n\n    async function atualizarMensagensAnteriores(): Promise<number|null> {\n        if (!mensagensAnteriores.value || mensagens.value.length === 0) {\n            return null\n        }\n\n        if (controleAtualizar.bloquearAtualizarAnteriores) {\n            return null\n        }\n\n        controleAtualizar.bloquearAtualizarAnteriores = true\n        const mensagemId = first(mensagens.value).id\n        await ajaxMensagensAnteriores(mensagemId)\n\n        controleAtualizar.bloquearAtualizarAnteriores = false\n        return mensagemId\n    }\n\n    async function ajaxMensagensAnteriores(mensagemId: number): Promise<void> {\n        let response = await axios.get(`/conversa/${conversaId}/mensagens/anteriores/${mensagemId}`)\n\n        mensagens.value = removerExistentes(Mensagem.converterArray(response.data.mensagens)).concat(mensagens.value)\n        mensagensAnteriores.value = response.data.mais\n    }\n\n    async function ajaxNovasMensagens(mensagemId: number): Promise<void> {\n        let response = await axios.get(`/conversa/${conversaId}/mensagens/posteriores/${mensagemId}`)\n\n        if (response.data.mensagens.length > 0) {\n            mensagens.value = mensagens.value.concat(removerExistentes(Mensagem.converterArray(response.data.mensagens)))\n            temNovasMensagens.value = true\n        }\n    }\n\n    async function ajaxEnviarMensagem(texto: string): Promise<void> {\n        let response = await axios.post(`/conversa/${conversaId}/enviar`, {\n            mensagem: texto,\n        })\n\n        mensagens.value.push(new Mensagem(response.data.id, response.data.mensagem, response.data.usuario_id, response.data.created_at))\n    }\n\n    function ajaxEnviarUltimaVisualizacao(id: number): void {\n        axios.post(`/conversa/${conversaId}/mensagens/visualizacao/${id}`)\n    }\n\n    function ajaxExcluirMensagem(id: number): void {\n        axios.get(`/conversa/${conversaId}/mensagem/excluir/${id}`).then(() => {\n            mensagens.value = filter(mensagens.value, (m) => id !== m.id)\n        })\n    }\n\n    function novaMensagemListener(): void {\n        NovaMensagem.addListener(new Listener((e) => {\n            if (e.mensagem_id > (last(mensagens.value)?.id ?? 0)) {\n                atualizarMensagens()\n            }\n        }, 1))\n    }\n\n    function mensagemExcluidaListener(): void {\n        MensagemExcluida.addListener(new Listener((e) => {\n            mensagens.value = filter(mensagens.value, (m) => e.mensagem_id !== m.id)\n        }, 1))\n    }\n\n    async function enviarMensagem(texto: string): Promise<void> {\n        let mensagem = new Mensagem(tempId, texto, usuarioId, new Date(), true)\n        tempId -= 1\n\n        mensagens.value.push(mensagem)\n\n        try {\n            await ajaxEnviarMensagem(mensagem.mensagem)\n        } finally {\n            mensagens.value = filter(mensagens.value, (m) => m.id !== mensagem.id)\n        }\n\n        deveSolicitarPermissao()\n    }\n\n    function getMensagemErroEnviarMensagem(e): string {\n        if (e?.response?.data?.errors?.mensagem) {\n            if (Array.isArray(e?.response?.data?.errors?.mensagem)) {\n                let [mensagem] = e.response.data.errors.mensagem\n                return mensagem\n            }\n            return e.response.data.errors.mensagem\n        }\n        if (e?.response?.data?.message) {\n            return e.response.data.message\n        }\n        return 'Erro ao enviar mensagem'\n    }\n\n    function removerExistentes(msgs: Mensagem[]): Mensagem[] {\n        return msgs.filter((m) => !mensagens.value.find((m2) => m2.id === m.id))\n    }\n\n    return {\n        mensagens,\n        mensagensAnteriores,\n        temNovasMensagens,\n        temPermNotificacao,\n        ultimaMsgVisualizadaId,\n        ajaxExcluirMensagem,\n        atualizarMensagensAnteriores,\n        enviarMensagem,\n        getMensagemErroEnviarMensagem,\n        getProximaMensagem,\n        getUltimaMensagemVisualizada,\n        solicitarPermNotificacao,\n        visualizarMensagem,\n    }\n}\n","/* eslint-disable camelcase */\nimport Mensagem from './Mensagem'\nimport Visualizacao from './Visualizacao'\n\nexport default class Conversa {\n    id: number\n    equipamento_id: number\n    visualizacao: Visualizacao\n    mensagens: Mensagem[]\n\n    constructor(id, equipamento_id, visualizacao, mensagens) {\n        this.id = id\n        this.equipamento_id = equipamento_id\n        this.visualizacao = visualizacao\n        this.mensagens = mensagens.map((m) => new Mensagem(m.id, m.mensagem, m.usuario_id, m.created_at))\n    }\n}\n","<script setup lang=\"ts\">\n/* eslint-disable vuejs-accessibility/form-control-has-label */\nimport { ref, onMounted, nextTick } from 'vue'\nimport { debounce } from 'lodash'\nimport SiteLayout from '@/Layouts/SiteLayout.vue'\nimport Mensagem from './Componentes/Mensagem.vue'\nimport FormError from '@/Componentes/Layout/Forms/FormError.vue'\nimport conversaLib from './Componentes/ConversaLib'\nimport Conversa from '@/Models/Equipamento/Conversa/Conversa'\n\nconst props = defineProps({\n    conversa: Object,\n    usuarioId: Number,\n    mensagensTempoExcluir: Number,\n})\n\nconst scroll = debounce(onScroll, 100, { maxWait: 250 })\nconst scrollMargin: number = 25\nconst maxlengthText: number = 2500\nconst elMensagens = ref(null)\nlet erroMensagem = ref('')\nlet textoMsg = ref('')\nlet conversaModel = new Conversa(props.conversa.id, props.conversa.equipamentoId, props.conversa.visualizacao, props.conversa.mensagens)\n\nconst {\n    mensagens,\n    mensagensAnteriores,\n    temNovasMensagens,\n    temPermNotificacao,\n    ultimaMsgVisualizadaId,\n    ajaxExcluirMensagem,\n    atualizarMensagensAnteriores,\n    enviarMensagem,\n    getMensagemErroEnviarMensagem,\n    getProximaMensagem,\n    getUltimaMensagemVisualizada,\n    solicitarPermNotificacao,\n    visualizarMensagem,\n} = conversaLib(conversaModel, props.usuarioId)\n\nonMounted(() => {\n    if (elMensagens.value.scrollHeight > (elMensagens.value.clientHeight + scrollMargin)) {\n        mensagensAnteriores.value = true\n    }\n\n    nextTick(setScrollPagina)\n})\n\nasync function enviarMensagemEvent(): Promise<void> {\n    try {\n        let texto = textoMsg.value.trim()\n        textoMsg.value = ''\n        erroMensagem.value = ''\n        await enviarMensagem(texto)\n    } catch (e) {\n        erroMensagem.value = getMensagemErroEnviarMensagem(e)\n\n        if (e?.response?.data?.mensagem?.length === 0) {\n            setTimeout(() => {\n                window.location.reload()\n            }, 5000)\n        }\n    }\n}\n\nfunction setScrollPagina(): void {\n    const ultimaVisualizada = getUltimaMensagemVisualizada()\n\n    if (ultimaVisualizada) {\n        setMensagensScrolltop(getOffsetMensagem(ultimaVisualizada.id) - (elMensagens.value.clientHeight / 2))\n    }\n\n    if (elMensagens.value.scrollTop < elMensagens.value.querySelector('.loader-inline')?.clientHeight) {\n        setMensagensScrolltop(elMensagens.value.querySelector('.loader-inline')?.clientHeight)\n    }\n\n    nextTick(verificaUltimaVisualizada)\n}\n\nfunction novasMensagens(): void {\n    temNovasMensagens.value = false\n    const proximaMensagem = getProximaMensagem(ultimaMsgVisualizadaId)\n    if (proximaMensagem) {\n        setMensagensScrolltop(getOffsetMensagem(proximaMensagem.id) - (elMensagens.value.clientHeight / 2))\n        visualizarMensagem(proximaMensagem.id)\n    } else {\n        setScrollPagina()\n    }\n}\n\nfunction setMensagensScrolltop(px: number): void {\n    elMensagens.value.scrollTop = px\n\n    setTimeout(() => {\n        scroll.cancel()\n    }, 100)\n}\n\nfunction getOffsetMensagem(id: number): number {\n    return elMensagens.value.querySelector(`#msg-${id}`).offsetTop - elMensagens.value.offsetTop\n}\n\nfunction onScroll(): void {\n    if (elMensagens.value.scrollTop <= scrollMargin) {\n        atualizarMsgsAnteriores()\n    }\n\n    verificaUltimaVisualizada()\n\n    if ((elMensagens.value.scrollTop + elMensagens.value.clientHeight) >= (elMensagens.value.scrollHeight - scrollMargin)) {\n        temNovasMensagens.value = false\n    }\n}\n\nfunction verificaUltimaVisualizada(): void {\n    const ultimaVisualizada = procuraUltimaMensagemVisualizada()\n    if (ultimaVisualizada && ultimaVisualizada.id > ultimaMsgVisualizadaId) {\n        ultimaMsgVisualizadaId.value = ultimaVisualizada.id\n        visualizarMensagem(ultimaMsgVisualizadaId.value)\n    }\n}\n\nfunction procuraUltimaMensagemVisualizada(): object {\n    const idxUltima = mensagens.value.findIndex((m) => m.id > ultimaMsgVisualizadaId.value)\n    return mensagens.value.slice(idxUltima).findLast((m) => m.id > 0 && verificaMensagemVisualizada(m.id))\n}\n\nfunction verificaMensagemVisualizada(id): boolean {\n    const el = elMensagens.value.querySelector(`#msg-${id}`)\n\n    const elOffset = el.offsetTop + el.clientHeight - el.parentElement.offsetTop\n    return elOffset > el.parentElement.scrollTop && elOffset < el.parentElement.scrollTop + el.parentElement.clientHeight\n}\n\nasync function atualizarMsgsAnteriores(): Promise<void> {\n    let mensagemId = await atualizarMensagensAnteriores()\n    if (!mensagemId) { return }\n\n    nextTick(() => {\n        setMensagensScrolltop(getOffsetMensagem(mensagemId))\n    })\n}\n\nfunction excluirMensagemListener(mensagem: object): void {\n    ajaxExcluirMensagem(mensagem.id)\n}\n\n</script>\n\n<template>\n    <SiteLayout :titulo=\"`Conversa ${conversa.equipamento.titulo}`\">\n        <div class=\"container conversa\">\n            <h2>Conversa - {{ conversa.equipamento.titulo }}</h2>\n            <div v-if=\"!temPermNotificacao\" class=\"alert alert-warning mt-2 mb-4 cursor-pointer\" @click=\"solicitarPermNotificacao\">\n                Você não irá receber notificações de novas mensagens.<br>\n                Clique aqui para autorizar as Notificações\n            </div>\n            <div class=\"conteudo\">\n                <div class=\"container-mensagens\">\n                    <div ref=\"elMensagens\" class=\"mensagens\" @scroll=\"scroll\">\n                        <div v-if=\"mensagensAnteriores\" class=\"loader-inline\">\n                            <span class=\"elemento\" />\n                        </div>\n                        <Mensagem v-for=\"mensagem in mensagens\" :key=\"mensagem.id\" :mensagem=\"mensagem\"\n                                  :usuarioId=\"usuarioId\" :mensagensTempoExcluir=\"mensagensTempoExcluir\"\n                                  @excluirMensagem=\"excluirMensagemListener\" />\n                    </div>\n                    <Transition name=\"fade-transition\" :duration=\"100\">\n                        <button v-if=\"temNovasMensagens\" type=\"button\" class=\"novas-mensagens\" @click=\"novasMensagens\">\n                            <span>Novas Mensagens</span>\n                        </button>\n                    </Transition>\n                </div>\n                <form class=\"mensagens-footer\" @submit.prevent=\"enviarMensagemEvent\">\n                    <div class=\"col\">\n                        <div class=\"row\">\n                            <FormError :error=\"erroMensagem\" />\n                        </div>\n                        <div class=\"d-flex flex-row\">\n                            <textarea v-model=\"textoMsg\" class=\"form-control\" :maxlength=\"maxlengthText\" rows=\"3\" />\n                            <div class=\"col\">\n                                <button type=\"submit\" class=\"btn btn-primary\">\n                                    Enviar\n                                </button>\n                                <span class=\"textcount\">{{ textoMsg.length + ' / ' + maxlengthText }}</span>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </SiteLayout>\n</template>\n"],"names":["first","filter","last","debounce"],"mappings":"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"}